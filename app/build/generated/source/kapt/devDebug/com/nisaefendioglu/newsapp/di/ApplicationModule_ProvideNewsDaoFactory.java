// Generated by Dagger (https://dagger.dev).
package com.nisaefendioglu.newsapp.di;

import com.nisaefendioglu.newsapp.data.DAO;
import com.nisaefendioglu.newsapp.data.LocalDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideNewsDaoFactory implements Factory<DAO> {
  private final Provider<LocalDatabase> dbProvider;

  public ApplicationModule_ProvideNewsDaoFactory(Provider<LocalDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public DAO get() {
    return provideNewsDao(dbProvider.get());
  }

  public static ApplicationModule_ProvideNewsDaoFactory create(Provider<LocalDatabase> dbProvider) {
    return new ApplicationModule_ProvideNewsDaoFactory(dbProvider);
  }

  public static DAO provideNewsDao(LocalDatabase db) {
    return Preconditions.checkNotNullFromProvides(ApplicationModule.INSTANCE.provideNewsDao(db));
  }
}
